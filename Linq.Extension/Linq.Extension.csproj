<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks> netcoreapp2.1; netcoreapp3.1; net45; net451; net452; net462; net472</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Authors>Nav Malik</Authors>
    <Copyright>Nav Malik</Copyright>
    <Description>Linq Extension to provide Dynamic Where Condition and Dynamic Select, Dynamic Take If Positive Number, Pagination and Nesting Predicates with parenthesis. Use SearchInput class for Dynamic Where and PaginationInput for pagination (take, skip and sort).</Description>
    <PackageTags>Linq Extension DynamicSelect DynamicWhere Linq.Entities LinqEntity Linq.Entity Nesting Predicates NestingPredicates</PackageTags>
    <Version>1.0.0.9</Version>
    <AssemblyVersion>1.0.0.9</AssemblyVersion>
    <PackageReleaseNotes>Added notstartswith, notendswith, containsinlist, notcontainsinlist,
 startswithinlist,
 endswithinlist, notstartswithinlist, notendswithinlist in FilterOperationEnum. These will only be applicable to Strings fields
This will allow to use contains, startsWith, and endsWith in list and will translate into as many contains, startswith and/or endswith expressions as many values in the list.
E.g. if Not Contains In List is used then the values will be AND together, for exmaple (NOT (fieldName LIKE %value1%) AND (NOT (fieldName LIKE %value2%))). It will be similiar for startwith and endswith
E.g. if Contains In List is used then the values will be OR together, for example (fieldName LIKE %value1%) OR (fieldName LIKE %value2%). It will be similiar for startswith and endswith</PackageReleaseNotes>
    <FileVersion>1.0.0.9</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="morelinq" Version="3.3.2" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="System.ComponentModel.Annotations" Version="4.7.0" />
  </ItemGroup>

</Project>
	